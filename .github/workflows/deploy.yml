name: build-scan-deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  PROJECT_ID: ${{ vars.PROJECT_ID }}
  REGION: ${{ vars.REGION }}
  AR_HOST: ${{ vars.AR_HOST }}
  REPO: ${{ vars.REPO }}
  SERVICE_NAME: ${{ vars.SERVICE_NAME }}
  RUNTIME_SA: ${{ vars.RUNTIME_SA }}
  IMAGE_SHA: ${{ vars.SERVICE_NAME }}:${{ github.sha }}
  IMAGE_LATEST: ${{ vars.SERVICE_NAME }}:latest
  AR_IMAGE_SHA: ${{ vars.AR_HOST }}/${{ vars.PROJECT_ID }}/${{ vars.REPO }}/${{ vars.SERVICE_NAME }}:${{ github.sha }}
  AR_IMAGE_LATEST: ${{ vars.AR_HOST }}/${{ vars.PROJECT_ID }}/${{ vars.REPO }}/${{ vars.SERVICE_NAME }}:latest

jobs:
  build-scan-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Auth to GCP
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_DEPLOY_SA }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker for Artifact Registry
        run: gcloud auth configure-docker ${{ env.AR_HOST }} --quiet

      - name: Build image
        run: docker build -t $IMAGE_SHA -f app/Dockerfile .

      # На время демо только отчёт, не фейлим пайплайн
      - name: Trivy scan (report only)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE_SHA }}
          format: 'table'
          exit-code: '0'
          severity: 'HIGH,CRITICAL'

      - name: SBOM (CycloneDX)
        uses: aquasecurity/trivy-action@0.20.0
        with:
          image-ref: ${{ env.IMAGE_SHA }}
          format: 'cyclonedx'
          output: 'sbom.cdx.json'

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: sbom.cdx.json

      - name: Tag & push to Artifact Registry
        run: |
          docker tag $IMAGE_SHA $AR_IMAGE_SHA
          docker tag $IMAGE_SHA $AR_IMAGE_LATEST
          docker push $AR_IMAGE_SHA
          docker push $AR_IMAGE_LATEST

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $SERVICE_NAME \
            --image $AR_IMAGE_SHA \
            --region $REGION \
            --service-account $RUNTIME_SA \
            --allow-unauthenticated \
            --platform managed \
            --port 8080 \
            --max-instances 3 \
            --timeout 300

      - name: Show Cloud Run URL
        run: gcloud run services describe $SERVICE_NAME --region $REGION --format='value(status.url)'

      - name: Smoke check (/, /info)
        run: |
          set -euo pipefail
          URL=$(gcloud run services describe $SERVICE_NAME --region $REGION --format='value(status.url)')
          echo "Testing URL: $URL"

          echo "→ Check /"
          curl -fsS "$URL/" | grep -q '^ok$'

          echo "→ Check /info"
          curl -fsS "$URL/info" | grep -q 'APP_TOKEN='

          echo "Smoke check passed ✅"
